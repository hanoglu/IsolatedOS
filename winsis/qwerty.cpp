/*
qwerty.c
Copyright (C) 2021  Yusuf K. Hanoğlu
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; version 2
of the License.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA. 
 */


#include <stdint.h>


bool charpixel[45][256] = {
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,1,1,0,0,0,0,0,
 0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,//A
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,//B
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//C
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//Ç
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,0,0,0,0,0,1,0,0,0,0,
 0,0,0,0,0,1,1,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,0,0,0,0,
 0,0,1,0,0,0,0,0,1,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,//D
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,1,0,0,0,
 0,0,1,1,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//E
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//F
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//G
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,1,1,0,0,1,1,0,0,0,
 0,0,0,0,0,1,1,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,0,0,//Ğ
 0,0,1,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,1,1,1,1,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,//H
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,//I	4 5
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,1,1,1,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,//İJ
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,1,1,1,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,//J
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,1,0,0,1,0,0,0,0,0,0,
 0,0,0,1,1,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,1,0,0,0,0,
 0,0,0,1,0,0,1,0,0,0,0,0,
 0,0,0,1,0,1,0,0,0,0,0,0,//K
 0,0,0,1,1,1,0,0,0,0,0,0,
 0,0,0,1,0,0,1,0,0,0,0,0,
 0,0,0,1,0,0,0,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,//L
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},

{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,1,0,
 0,0,1,1,0,0,0,0,0,1,1,0,
 0,0,1,0,1,0,0,0,1,0,1,0,
 0,0,1,0,1,0,0,0,1,0,1,0,//M
 0,0,1,0,0,1,0,1,0,0,1,0,
 0,0,1,0,0,1,0,1,0,0,1,0,
 0,0,1,0,0,0,1,0,0,0,1,0,
 0,0,1,0,0,0,0,0,0,0,1,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,1,0,0,0,0,0,1,0,0,
 0,0,1,0,1,0,0,0,0,1,0,0,
 0,0,1,0,0,1,0,0,0,1,0,0,//N
 0,0,1,0,0,0,1,0,0,1,0,0,
 0,0,1,0,0,0,0,1,0,1,0,0,
 0,0,1,0,0,0,0,0,1,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},

{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,//O
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,//Ö
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,//P
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,//OQ
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,1,0,0,0,0,0,0,1,0,0,
 0,0,0,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,0,1,0,0,0,0,0,
 0,0,0,0,0,0,0,1,1,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,//R
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,1,0,0,1,0,0,0,0,0,
 0,0,0,1,0,0,0,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,1,1,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,//S
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,1,1,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,//SŞ
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,0,0,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,1,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,1,0,0,0,0,0,
 0,0,0,0,1,1,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,//T
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,//U
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,0,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,//UÜ
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,0,1,1,1,1,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,0,0,1,0,
 0,0,1,0,0,0,0,0,0,0,1,0,
 0,0,1,0,0,0,1,0,0,0,1,0,//W
 0,0,1,0,0,1,0,1,0,0,1,0,
 0,0,0,1,0,1,0,1,0,1,0,0,
 0,0,0,1,1,0,0,0,1,1,0,0,
 0,0,0,1,0,0,0,0,0,1,0,0,
 0,0,0,1,0,0,0,0,0,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,1,0,0,
 0,0,0,1,0,0,0,0,0,1,0,0,
 0,0,0,1,0,0,0,0,0,1,0,0,
 0,0,0,0,1,0,0,0,1,0,0,0,
 0,0,0,0,1,0,0,0,1,0,0,0,//V
 0,0,0,0,1,0,0,0,1,0,0,0,
 0,0,0,0,0,1,0,1,0,0,0,0,
 0,0,0,0,0,0,1,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,//X
 0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,0,0,1,1,0,0,0,0,0,
 0,0,0,0,0,1,1,0,0,0,0,0,
 0,0,0,0,1,0,0,1,0,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,0,0,0,0,0,1,0,0,0,
 0,0,0,1,0,0,0,1,0,0,0,0,
 0,0,0,0,1,0,1,0,0,0,0,0,//Y
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,
 0,0,0,0,0,0,0,0,1,0,0,0,
 0,0,0,0,0,0,0,1,0,0,0,0,
 0,0,0,0,0,0,1,0,0,0,0,0,
 0,0,0,0,0,1,0,0,0,0,0,0,//Z
 0,0,0,0,1,0,0,0,0,0,0,0,
 0,0,0,1,0,0,0,0,0,0,0,0,
 0,0,1,1,1,1,1,1,1,1,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,},
{0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,
 0,0,0,0,0,0,0,0,0,0,0,0,}

};
int getkey()
{ 	
 	while(true)
   	{

       	 if(inb(0x64) & 0x1)                 
        	{	
			//println(i2cc(inb(0x60)));	
           	 switch(inb(0x60))
           	 { 
			
      		case 1:
			
               		break;


		case 2:
		        return '1';
		        break;
		case 3:
		        return '2';
		        break;
		case 4:
		        return '3';
		        break;
		case 5:
		        return '4';
		        break;
		case 6:
		        return '5';
		        break;
		case 7:
		        return '6';
		        break;
		case 8:
		        return '7';
		        break;
		case 9:
		        return '8';
		        break;
		case 10:
		        return '9';
		        break;
		case 11:
		        return '0';
		        break;
		case 12:
		        return '-';
		        break;
		case 13:
		        return '=';
		        break;
		case 14:
			return -9;//backspace			
			break;
	        case 15:
			return -10;//tab
		        break;
		case 16:
		        return 'Q';
		        break;
		case 17:
		        return 'W';
		        break;
		case 18:
		        return 'E';
		        break;
		case 19:
		        return 'R';
		        break;
		case 20:
		        return 'T';
		        break;
		case 21:
		        return 'Y';
		        break;
		case 22:
		        return 'U';
		        break;
		case 23:
		        return 'I';
		        break;
		case 24:
		        return 'O';
		        break;
		case 25:
		        return 'P';
		        break;
		case 26:
		        return 'Ğ';
		        break;
		case 27:
		        return 'Ü';
		        break;
		case 28:
			return -100;//enter
		        break;
	        case 29:
		        return -101;  //         Left Control
		        break;
		case 30:
		        return 'A';
		        break;
		case 31:
		        return 'S';
		        break;
		case 32:
		        return 'D';
		        break;
		case 33:
		        return 'F';
		        break;
		case 34:
		        return 'G';
		        break;
		case 35:
		        return 'H';
		        break;
		case 36:
		        return 'J';
		        break;
		case 37:
		        return 'K';
		        break;
		case 38:
		        return 'L';
		        break;
		case 39:
		        return 'Ş';
		        break;
		case 40:
			return 'İ';		        
		        break;
		case 41:
		        return (',');               // Back tick (`)
		        break;
	      	case 42:         //                        Left shift 
		        return -102;
		        break;
		case 43:                                 //\ (< for somekeyboards)   
		        return '<';
		        break;
		case 44:
		        return 'Z';
		        break;
		case 45:
		        return 'X';
		        break;
		case 46:
		        return 'C';
		        break;
		case 47:
		        return 'V';
		        break;                
		case 48:
		        return 'B';
		        break;               
		case 49:
		        return 'N';
		        break;                
		case 50:
		        return 'M';
		        break;               
		case 51:
		        return 'Ö';
		        break;                
		case 52:
		        return 'Ç';
		        break;            
		case 53:
		        return '.';
		        break;            
		case 54:
		        //print('.');
			return 0;
		        break;            
		case 55:
		        return 0;
		        break;            
	      case 56:
		        return -104;     //      Right shift
		        break;          
		case 57:
		        return ' ';
		        break;

		}
		}
	}

		return 0;

	
}
